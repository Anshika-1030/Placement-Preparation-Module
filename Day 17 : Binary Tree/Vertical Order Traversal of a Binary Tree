class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        map<int, map<int, vector<int>>> mp;
        queue<pair<TreeNode*, pair<int, int>>> q;
        q.push({root, {0, 0}});

        while(!q.empty()){
            auto top = q.front(); q.pop();

            TreeNode* node = top.first;
            int hd = top.second.first;
            int lvl = top.second.second;

            mp[hd][lvl].push_back(node->val);

            if(node->left != NULL) q.push({node->left, {hd-1, lvl+1}});
            if(node->right != NULL) q.push({node->right, {hd+1, lvl+1}});            
        }

        vector<vector<int>> ans;
        for(auto &i : mp){
            vector<int> temp;

            for(auto &j : i.second){
                sort(j.second.begin(), j.second.end());

                for(auto &k : j.second){
                    temp.push_back(k);
                }     
            }

            ans.push_back(temp);
        }

        return ans;
    }
};
